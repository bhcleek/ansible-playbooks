---
- name: add homebrew taps
  homebrew_tap: tap="{{ item }}" state=present
  when: ansible_distribution == 'MacOSX'
  with_items:
    - caskroom/cask

- name: install packages
  homebrew: name="{{ item }}" state=latest
  with_items:
    - vim
    - python
    - git
    - mercurial
    - nodejs
    - dash
    - tmux
    - reattach-to-user-namespace
    - jq
    - git-lfs
  when: ansible_distribution == 'MacOSX'
  tags:
    - packages

- name: install packages
  homebrew_cask: name="{{ item }}" state=present
  with_items:
    - docker
    - iterm2
    - slack
  tags:
    - packages

- name: global npm packages
  npm: name="{{ item }}" global=true production=true state=latest
  with_items:
    - coffee-script
    - bower
    - grunt-cli
  tags:
    - packages

- name: install pip packages
  pip: name="{{ item }}" state=latest
  with_items:
    - awscli
  tags:
    - packages

- name: create tmux config directory
  file: dest="{{ ansible_env.HOME }}/.config/tmux" state=directory
  tags:
    - conf

- name: tmux.conf
  copy: dest="{{ ansible_env.HOME }}/.tmux.conf" src=tmux.conf backup=yes
  tags:
    - conf

- name: tmux config files
  copy: dest="{{ ansible_env.HOME }}/.config/tmux" src=tmux/ backup=yes
  tags:
    - conf

- name: bashrc
  copy: dest="{{ ansible_env.HOME }}/.bashrc" src=bashrc backup=yes
  tags:
    - conf

- name: bashrc-osx
  copy: dest="{{ ansible_env.HOME }}/.bashrc-osx" src=bashrc-osx backup=yes
  when: ansible_distribution == 'MacOSX'
  tags:
    - conf

- name: bash_profile
  copy: dest="{{ ansible_env.HOME }}/.bash_profile" src=bash_profile backup=yes
  tags:
    - conf

# https://docs.python.org/2/library/site.html
- name: python site-packages directory
  file: dest="{{ ansible_env.HOME }}/Library/Python/2.7/lib/python/site-packages" state=directory
  tags:
    - conf

- name: python site-packages configuration
  copy: dest="{{ ansible_env.HOME }}/Library/Python/2.7/lib/python/site-packages/homebrew.pth" src=homebrew.pth
  when: ansible_distribution == 'MacOSX'

- name: install patched Inconsolata
  copy: dest="{{ ansible_env.HOME }}/Library/Fonts/Inconsolata for Powerline.otf" src="fonts/Inconsolata/Inconsolata for Powerline.otf"
  when: ansible_distribution == 'MacOSX'

- name: install go fonts
  copy: dest="{{ ansible_env.HOME }}/Library/Fonts" src="fonts/go/"
  when: ansible_distribution == 'MacOSX'

- include: git.yml
  tags:
    - git
    - conf

- include: golang.yml
  tags:
    - packages
    - golang

- include: proto.yml
  tags:
    - packages
    - proto

# virtualbox
# sourcetree
# colloquy
# hipchat

# chrome
# firefox
# firebug
# balsamiq
# IntelliJ
