---
- include_tasks: packages_{{ ansible_os_family }}.yml
  tags: packages

#- name: install pip packages
#  pip:
#    name: "{{ item }}"
#    state: latest
#    virtualenv: "{{ venv }}"
#    virtualenv_command: "python3 -m venv"
#  with_items:
#  tags:
#    - packages
#    - python

- name: bashrc extensions
  copy:
    dest: "{{ ansible_env.HOME }}/.config/bash"
    src: bashrc.d/
    backup: no
  tags:
    - conf

- name: create $HOME bin directory
  file:
    dest: "{{ ansible_env.HOME }}/bin"
    state: directory
  tags:
    - packages

- name: install $HOME/bin/color-test
  copy:
    dest: "{{ ansible_env.HOME }}/bin/color-test"
    src: color-test
    backup: no
    mode: 0755
  tags:
    - packages
    - homebin
    - bin

- name: install $HOME/bin/color-gradient
  copy:
    dest: "{{ ansible_env.HOME }}/bin/color-gradient"
    src: color-gradient
    backup: no
    mode: 0755
  tags:
    - packages
    - homebin
    - bin

- name: install $HOME/bin/mov2gif
  copy:
    dest: "{{ ansible_env.HOME }}/bin/mov2gif"
    src: mov2gif
    backup: no
    mode: 0755
  tags:
    - packages
    - homebin
    - bin

- name: create iterm2 config directory
  file:
    dest: "{{ ansible_env.HOME }}/.config/iterm2"
    state: directory
  tags:
    - conf

- name: iterm2 preferences
  copy:
    dest: "{{ ansible_env.HOME }}/.config/iterm2/com.googlecode.iterm2.plist"
    src: iterm2/com.googlecode.iterm2.plist
    backup: yes
  tags:
    - conf

- name: iterm2 profiles
  copy:
    dest: "{{ ansible_env.HOME }}/.config/iterm2/Profiles.json"
    src: iterm2/Profiles.json
    backup: yes
  tags:
    - conf

- name: create tmux config directory
  file:
    dest: "{{ ansible_env.HOME }}/.config/tmux"
    state: directory
  tags:
    - conf

- name: tmux.conf
  copy:
    dest: "{{ ansible_env.HOME }}/.tmux.conf"
    src: tmux.conf
    backup: yes
  tags:
    - conf

- name: tmux config files
  copy:
    dest: "{{ ansible_env.HOME }}/.config/tmux"
    src: tmux/
    backup: yes
  tags:
    - conf

# https://docs.python.org/3.6/library/site.html
# https://docs.python.org/2.7/library/site.html
- name: python site-packages directory
  file:
    dest: "{{ ansible_env.HOME }}/Library/Python/{{ item }}/lib/python/site-packages"
    state: directory
  when: ansible_os_family == 'Darwin'
  loop:
    - '2.7'
    - '3.6'
    - '3.7'
    - '3.9'
    - '3.10'
  tags:
    - conf
    - python

- name: python site-packages configuration
  template:
    dest: "{{ ansible_env.HOME }}/Library/Python/{{ item }}/lib/python/site-packages/homebrew.pth"
    src: homebrew.pth
  when: ansible_os_family == 'Darwin'
  loop:
    - '2.7'
    - '3.6'
    - '3.7'
    - '3.9'
    - '3.10'
  tags:
    - conf
    - python

- name: create user font directory
  file:
    dest: "{{ user_font_dir }}"
    state: directory
  tags:
    - conf

- name: install patched Inconsolata
  copy:
    dest: "{{ user_font_dir }}/Inconsolata for Powerline.otf"
    src: "fonts/Inconsolata/Inconsolata for Powerline.otf"

- name: install go fonts
  copy:
    dest: "{{ user_font_dir }}"
    src: "fonts/go/"

- import_tasks: git.yml
  tags:
    - git
    - conf

- import_tasks: golang.yml
  tags:
    - packages
    - golang

- import_tasks: proto.yml
  tags:
    - packages
    - proto

- import_tasks: gcloud.yml
  tags:
    - packages
    - gcloud

# sourcetree

# chrome
# firefox
# firebug
# balsamiq
