---
- name: create global git config directory
  file:
    dest: "{{ ansible_env.HOME }}/.config/git"
    state: directory

- name: create global git ignore file
  copy:
    src: gitignore
    dest: "{{ ansible_env.HOME }}/.config/git/ignore"
    force: yes
    backup: no

- name: create global git attributes file
  copy:
    src: gitattributes
    dest: "{{ ansible_env.HOME }}/.config/git/attributes"
    force: yes
    backup: no

- name: global git config file exists
  copy:
    content: ""
    dest: "{{ ansible_env.HOME }}/.config/git/config"
    backup: yes
    force: no

- name: git config user.name
  command: git config --global user.name "Billie Cleek"

- name: git config user.email
  command: git config --global user.email "bhcleek@gmail.com"

- name: git config core.editor
  command: git config --global core.editor vim

- name: git config init.defaultBranch
  command: git config --global init.defaultBranch main

- name: git config core.autocrlf
  command: git config --global core.autocrlf false

- name: git config color.ui
  command: git config --global color.ui auto

- name: git config alias.doglog
  command: git config --global alias.doglog 'log --decorate --oneline --graph'

- name: git config alias.br
  command: git config --global alias.br "for-each-ref --sort=-committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'"

- name: git config alias.serve
  command: git config --global alias.serve 'daemon --reuseaddr --verbose --base-path=. --export-all ./.git'

- name: git config alias.pr (thanks @jessfraz!)
  raw: git config --global alias.pr '!pr() { git fetch origin pull/$1/head:pr-$1; git checkout pr-$1; }; pr'

- name: git config alias.done
  raw: git config --global alias.done '!branchdone() { branch=$(git rev-parse --abbrev-ref HEAD); if [[ "$branch" == "master" || "$branch" == "HEAD" ]]; then printf "cowardly refusing to delete this branch\n" >&2; exit 1; fi;  git checkout master && git remote update -p && git merge --ff-only origin/master && git branch -d ${branch}; }; branchdone'

- name: git config alias.prlog
  raw: git config --global alias.prlog "log --format='tformat:##### %s%n%+b%n' --reverse origin/master.."

- name: git config apply.whitepace
  command: git config --global apply.whitespace fix

  # Make git rebase work correctly on OSX. Thanks @jessfraz and https://www.git-tower.com/blog/make-git-rebase-safe-on-osx
- name: git config core.trustctime
  command: git config --global core.trustctime false
  when: ansible_os_family == 'Darwin'

- name: git config credential.helper
  command: git config --global credential.helper cache

- name: git config http.cookiefile
  command: git config --global http.cookiefile ~/.cache/git/cookies

- name: git config merge.tool
  command: git config --global merge.tool opendiff

- name: git config pull.rebase
  command: git config --global pull.rebase preserve

- name: git config push.default
  command: git config --global push.default simple

# keep the creation of new insteadOf entries from adding a whole new section
# (see: https://stackoverflow.com/questions/15935624/how-do-i-avoid-empty-sections-when-removing-a-setting-from-git-config)
#- name: keep url section
#  command: git config --global "url.{{ item.base }}.placeholder" placeholder
#  with_items: "{{ insteadOfs }}"
#
- name: remove insteadOf values
  command: git config unset --global --all "url.{{ item.base }}.insteadOf"
  with_items: "{{ insteadOfs }}"
  when: item.base is defined

- name: git config insteadOf
  command: git config --global --add url.{{ item.0.base }}.insteadOf "{{ item.1 }}"
  with_subelements:
    - "{{ insteadOfs }}"
    - urls
    - skip_missing: yes

- name: git config web.browser
  command: git config --global web.browser open
  when: ansible_os_family == "Darwin"

- name: git config tag.sort
  command: git config --global tag.sort version:refname

- name: git config version.prereleaseSuffix -alpha
  command: git config --global version.prereleaseSuffix -alpha

- name: git config version.prereleaseSuffix -beta
  command: git config --global version.prereleaseSuffix -beta
- name: git config version.prereleaseSuffix -rc
  command: git config --global version.prereleaseSuffix -rc

- name: git config gpg.program gpg
  command: git config --global gpg.program gpg

- name: git config diff.vault.command
  command: git config --global diff.vault.textconv "ansible-vault view"

# TODO(bc): replace include with include_tasks in Ansible 2.4
- include_tasks: git-workspace.yml
  with_items: "{{ workspaces }}"
  when: workspaces | default([], true)
  loop_control:
    loop_var: workspace
