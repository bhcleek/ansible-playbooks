GPG_AGENT_INFO=${HOME}/.gnupg/.gpg-agent-info

function _config_vim {
	XDG_VIMRC="${HOME}/.config/vim/vimrc"
	if [ -f "$XDG_VIMRC" ]
	then
		export XDG_VIMRC
		export VIMINIT='let $MYVIMRC="$XDG_VIMRC" | source $MYVIMRC'
	fi
}

function _start_gpg_agent {
	# fire up gpg-agent and allow it to act as the ssh-agent
	gpg-agent --daemon --enable-ssh-support --write-env-file "${GPG_AGENT_INFO}" > /dev/null 2>&1
	source "${HOME}/.gnupg/.gpg-agent-info"
}

function _run_gpg_agent {
	if command -v gpg-agent > /dev/null 2>&1; then
		: ${ORIG_SSH_AUTH_SOCK:=${SSH_AUTH_SOCK}}
		GPG_TTY=$(tty)
		export GPG_TTY
		if [ ! -f "${GPG_AGENT_INFO}" ]; then
			_start_gpg_agent;
		else
			source "${GPG_AGENT_INFO}"
			if ! gpg-connect-agent /bye 2> /dev/null; then
				# gpg-agent not running, restarting
				_start_gpg_agent;
			fi
		fi
		export ORIG_SSH_AUTH_SOCK
		# export gpg-agent's variables.
		export GPG_AGENT_INFO
		export SSH_AUTH_SOCK
		export SSH_AGENT_PID
	fi
}

function _run_tmux {
	# start the default tmux session if it doesn't already exist
	if command -v tmux &> /dev/null
	then
		if ! tmux has-session
		then
			tmux start-server
			tmux new-session -s default -n dashboard -d
			tmux split-window -h 'ulimit -n 4096 && godoc -http=:6060 -analysis=type,pointer -notes="BUG|TODO"'
			tmux split-window -v
			tmux select-pane -t 0
			tmux select-layout main-vertical
			if [ -d "$GOPATH/src/github.com" ]
			then
				tmux new-window -n workspace -c $GOPATH/src/github.com/
			fi
		fi
	fi
}
# set options
# Use a vi-style line editing interface.  By default, Bash is in emacs mode;
# Use vi mode instead.
#set -o vi
# indicate the mode in the prompt. This option was introduced in Bash 4.3; it
# will have no affect on older versions of Bash. Version 4.3 and later, though,
# will show a '+' to the very left of the prompt in edit mode and a ':' in
# command mode.
#set show-mode-in-prompt on

#if [ -f $(brew --prefix)/etc/bash_completion.d/go-completion.bash ]; then
#	source $(brew --prefix)/etc/bash_completion.d/go-completion.bash
#fi

if [ -f $(brew --prefix)/etc/bash_completion.d/git-completion.bash ]; then
	source $(brew --prefix)/etc/bash_completion.d/git-completion.bash
elif [ -f ~/.git-completion.bash ]; then
	source ~/.git-completion.bash
fi

if [ -f $(brew --prefix)/etc/bash_completion.d/git-prompt.sh ]; then
	source $(brew --prefix)/etc/bash_completion.d/git-prompt.sh
elif [ -f ~/.git-prompt.sh ]; then
	source ~/.git-prompt.sh
fi

if [ -f "$HOME/google-cloud-sdk/path.bash.inc" ]
then
	# updates PATH for the Google Cloud SDK.
	source "$HOME/google-cloud-sdk/path.bash.inc"
fi

if [ -f "$HOME/google-cloud-sdk/completion.bash.inc" ]
then
	# The next line enables shell command completion for gcloud.
	source "$HOME/google-cloud-sdk/completion.bash.inc"
fi

export HISTTIMEFORMAT='%F %T '
export HISTFILESIZE=                               # allow ~/.bash_history to grow without bound
export HISTSIZE=                                   # keep all commands in history
export HISTCONTROL=ignoreboth                      # store neither commands that begin with a space nor more than one copy of repeated commands
export HISTIGNORE=?:??                             # ignore one and two letter commands
shopt -s histappend                                # append to history, don't overwrite it
export PROMPT_COMMAND="history -a;$PROMPT_COMMAND" # append to history at each shell prompt

#export PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '
export PROMPT_COMMAND='history -a;__git_ps1 "\u@\h:\w" "\\\$ "'
export CLICOLOR=1
export GIT_PS1_SHOWCOLORHINTS=true
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWSTASHSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true
export GIT_PS1_SHOWUPSTREAM=auto

#export NODE_PATH=/usr/local/lib/node

if [ -d /usr/libexec/java_home ]
then
	export JAVA_HOME=$(/usr/libexec/java_home)
fi
export GOPATH=$HOME/develop/go

: ${ORIG_PATH:=${PATH}}
export ORIG_PATH
export PATH=$HOME/bin:${GOPATH//:/bin:}/bin:/usr/local/go/bin:/usr/local/bin:${ORIG_PATH}
export CDPATH=.:${GOPATH//:/src/github.com:}/src/github.com:${GOPATH//:/src/golang.org:}/src/golang.org:${HOME}/develop:${GOPATH//:/src:}/src

if [ "$(uname)" == "Darwin" ]
then
	if [ -f "~/.bashrc-osx" ]
	then
		source ~/.bashrc-osx
	fi
fi

_config_vim
_run_gpg_agent
_run_tmux
