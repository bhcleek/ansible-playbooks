function _config_vim {
	XDG_VIMRC="${HOME}/.config/vim/vimrc"
	if [ -f "$XDG_VIMRC" ]
	then
		export XDG_VIMRC
		export VIMINIT='let $MYVIMRC="$XDG_VIMRC" | source $MYVIMRC'
	fi
}

function _start_gpg_agent {
	# fire up gpg-agent
	gpgconf --launch gpg-agent > /dev/null 2>&1
}

function _run_gpg_agent {
	if command -v gpg-agent > /dev/null 2>&1; then
		: ${ORIG_SSH_AUTH_SOCK:=${SSH_AUTH_SOCK}}
		: ${ORIG_SSH_AGENT_PID:=${SSH_AGENT_PID}}
		GPG_TTY=$(tty)
		export GPG_TTY
		# make sure gpg-agent is running
		gpgconf --launch gpg-agent > /dev/null
		export ORIG_SSH_AUTH_SOCK
		# export gpg-agent's variables.
		export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
		unset SSH_AGENT_PID

	fi
}

function _run_tmux {
	# start the default tmux session if it doesn't already exist
	if command -v tmux &> /dev/null
	then
		if ! tmux has-session 2> /dev/null
		then
			tmux start-server
			tmux new-session -s default -n dashboard -d
			tmux split-window -h 'ulimit -n 4096 && godoc -http=:6060 -analysis=type -notes="BUG|TODO"'
			tmux split-window -v
			tmux select-pane -t 0
			tmux select-layout main-vertical
			if [ -d "$GOPATH/src/github.com" ]
			then
				tmux new-window -n workspace -c $GOPATH/src/github.com/
			fi
		fi
	fi
}
# set options
# Use a vi-style line editing interface.  By default, Bash is in emacs mode;
# Use vi mode instead.
#set -o vi
# indicate the mode in the prompt. This option was introduced in Bash 4.3; it
# will have no affect on older versions of Bash. Version 4.3 and later, though,
# will show a '+' to the very left of the prompt in edit mode and a ':' in
# command mode.
#set show-mode-in-prompt on

#if [ -f $(brew --prefix)/etc/bash_completion.d/go-completion.bash ]; then
#	source $(brew --prefix)/etc/bash_completion.d/go-completion.bash
#fi

if [ "$(uname -s)" = "Darwin" ] && command -v brew > /dev/null && [ -f $(brew --prefix)/etc/bash_completion.d/git-completion.bash ]; then
	source $(brew --prefix)/etc/bash_completion.d/git-completion.bash
elif [ -f ~/.git-completion.bash ]; then
	source ~/.git-completion.bash
elif [ -f /usr/share/bash-completion/completions/git ]; then
	source /usr/share/bash-completion/completions/git
fi

if [ "$(uname -s)" = "Darwin" ] && command -v brew > /dev/null && [ -f $(brew --prefix)/etc/bash_completion.d/git-prompt.sh ]; then
	source $(brew --prefix)/etc/bash_completion.d/git-prompt.sh
elif [ -f ~/.git-prompt.sh ]; then
	source ~/.git-prompt.sh
elif [ -f /etc/bash_completion.d/git-prompt ]; then
	source /etc/bash_completion.d/git-prompt
fi

if [ -f "$HOME/google-cloud-sdk/path.bash.inc" ]
then
	# updates PATH for the Google Cloud SDK.
	source "$HOME/google-cloud-sdk/path.bash.inc"
fi

if [ -f "$HOME/google-cloud-sdk/completion.bash.inc" ]
then
	# The next line enables shell command completion for gcloud.
	source "$HOME/google-cloud-sdk/completion.bash.inc"
fi

if [ -f ~/.config/bash/fzf.bash ]
then
	source ~/.config/bash/fzf.bash
fi

export HISTTIMEFORMAT='%F %T '
export HISTFILESIZE=               # allow ~/.bash_history to grow without bound
export HISTSIZE=                   # keep all commands in history
export HISTCONTROL=ignoreboth      # store neither commands that begin with a space nor more than one copy of repeated commands
export HISTIGNORE=?:??             # ignore one and two letter commands
shopt -s histappend                # append to history, don't overwrite it
export PROMPT_COMMAND="history -a" # append to history at each shell prompt

# the right pointing brackets are U+276F
export PROMPT_COMMAND=$PROMPT_COMMAND';__git_ps1 "╭─\u@\h:\w" "\n╰─\[\e[32;1m\]❯❯❯\[\e[0m\] "'
export CLICOLOR=1
export GIT_PS1_SHOWCOLORHINTS=true
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWSTASHSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true
export GIT_PS1_SHOWUPSTREAM=auto

export FZF_DEFAULT_OPTS='--height 25% --reverse --border'
export VISUAL=vim
export EDITOR=vim

#export NODE_PATH=/usr/local/lib/node

if [ -d /usr/libexec/java_home ]
then
	export JAVA_HOME=$(/usr/libexec/java_home)
fi

: ${ORIG_PATH:=${PATH}}
export ORIG_PATH
export PATH=/usr/local/go/bin:/usr/local/bin:$PATH

GOPATH=$(go env GOPATH)
export GOBIN=${GOPATH%%:*}/bin

export PATH=$HOME/bin:${GOPATH//:/bin:}/bin:${PATH}
CDPATH=.:${GOPATH//:/src/github.com:}/src/github.com:${GOPATH//:/src/golang.org:}/src/golang.org:${HOME}/src:${GOPATH//:/src:}/src


for FILE in $(find $HOME/.config/bash -mindepth 1 -maxdepth 1 -type f -not -name 'os_*')
do
	source "$FILE"
done

OS_BASHRC=$HOME/.config/bash/os_$(uname -s)
if [ -f "$OS_BASHRC" ]
then
	source "$OS_BASHRC"
fi

eval "$(direnv hook bash)"

_config_vim
_run_gpg_agent
_run_tmux
